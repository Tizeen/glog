<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Problems on Glog</title>
    <link>http://localhost:1313/categories/problems/</link>
    <description>Recent content in Problems on Glog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 25 Dec 2024 09:05:37 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/problems/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>大小问题记录</title>
      <link>http://localhost:1313/2024/12/25/%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Wed, 25 Dec 2024 09:05:37 +0000</pubDate>
      <guid>http://localhost:1313/2024/12/25/%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E8%AE%B0%E5%BD%95/</guid>
      <description>&lt;p&gt;记录遇到的相关问题。&lt;/p&gt;&#xA;&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;阿里云slb-5xx和4xx波动&#34;&gt;阿里云slb 5xx和4xx波动&lt;/h2&gt;&#xA;&lt;p&gt;现象：&lt;/p&gt;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;  &lt;li&gt;&#xA;    告警平台发生 slb 5xx 和 4xx 波动告警&#xA;  &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;排查过程：&lt;/p&gt;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;  &lt;li&gt;&#xA;    通过 slb 日志过滤，5xx 中主要是 502 占比很高，4xx 中主要是 499 的占比很高，只有一个域名出现此状况&#xA;  &lt;/li&gt;&#xA;  &lt;li&gt;&#xA;    通过 502 状态码初步判断是后端服务不可用，然后客户端在不断重试，导致 499 状态码的请求增多&#xA;  &lt;/li&gt;&#xA;  &lt;li&gt;&#xA;    根据域名和 slb 的监听定位后端服务，检查最底层后端服务，发现 nginx error log 中提示 upstream 无法连接&#xA;  &lt;/li&gt;&#xA;  &lt;li&gt;&#xA;    upstream 的后端是 php 的服务，查看运行状态正常，服务没有挂掉&#xA;  &lt;/li&gt;&#xA;  &lt;li&gt;&#xA;    判断是服务处理不过来，可能是配置的线程数可能太少，影响了服务的处理能力&#xA;  &lt;/li&gt;&#xA;  &lt;li&gt;&#xA;    检查配置文件，发现 pm.max_children 配置仅有 5&#xA;  &lt;/li&gt;&#xA;  &lt;li&gt;&#xA;    提升 pm.max_children 值到 10 倍到 50，重启 php-fpm&#xA;  &lt;/li&gt;&#xA;  &lt;li&gt;&#xA;    观察 nginx error log，发现错误已恢复&#xA;  &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;后续：&lt;/p&gt;&#xA;&lt;ol class=&#34;wp-block-list&#34;&gt;&#xA;  &lt;li&gt;&#xA;    仅配置 pm.max_children 并不是一个合理的做法，同时还需要调整 pm.start_servers, pm.min_spare_servers, pm.max_spare_server&lt;br /&gt;pm.start_servers(初始进程值) 一般是 max_children 值的 20%&lt;br /&gt;pm.min_spare_servers(至少保持空闲的进程值) 一般是 pm.start_servers 的 50%&lt;br /&gt;pm.max_spare_servers(最大保持空闲值) 一般是 pm.start_servers 的 2 倍&#xA;  &lt;/li&gt;&#xA;  &lt;li&gt;&#xA;    需要注意的是，pm.max_children 需要根据服务器的资源情况来决定&#xA;  &lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;总结：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
